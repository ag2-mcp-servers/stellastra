# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:59:44+00:00

from __future__ import annotations

from enum import Enum
from typing import Optional

from pydantic import BaseModel, Field


class Rating(Enum):
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5


class PostReviewPostRequest(BaseModel):
    rating: int = Field(..., examples=[5])
    user_email: str = Field(..., examples=['johnsmith@usercompanyxyz.com'])
    user_name: Optional[str] = Field(None, examples=['John'])


class PostReviewPostResponse(BaseModel):
    data: Optional[str] = Field(None, examples=['Review posted successfully'])


class PostReviewPostResponse1(BaseModel):
    data: Optional[str] = Field(None, examples=["'user_email' is missing"])


class PostReviewPostResponse2(BaseModel):
    data: Optional[str] = Field(
        None, examples=['Not authorized, authorization header missing or malformed']
    )


class PostReviewPostResponse3(BaseModel):
    data: Optional[str] = Field(
        None, examples=["The syntax of the user's email is invalid."]
    )
